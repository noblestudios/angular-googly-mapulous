angular.module("googlyMapulous",[]),angular.module("googlyMapulous").directive("googleMap",["googleMaps",function(a){return{restrict:"E",template:'<div class="google-map-container"><div class="google-map"></div></div>',controller:["$scope","$element","$compile","$attrs",function(b,c,d,e){function f(){var e={};b.mapConfig&&b.mapConfig instanceof Object&&Object.keys(b.mapConfig).forEach(function(a){e[a]=b.mapConfig[a]}),b.googleMap=new a.GoogleMap(c[0].children[0].children[0],b,d,e),b.$emit("googleMapLoaded",b.googleMap),b.mapLoaded=!0}if(b.mapManualInit||"undefined"!=typeof e.manualInit)var g=b.$on("initializeGoogleMap",function(){f(),g()});else f()}]}}]),angular.module("googlyMapulous").provider("googleMaps",[function(){function a(a,b,c,d){var e=Math.sqrt(Math.pow(c,2)+Math.pow(d,2)),f=Math.acos((Math.pow(e/2,2)+Math.pow(d/2,2)-Math.pow(c/2,2))/(2*(d/2)*(e/2)))*(180/Math.PI),g=google.maps.geometry.spherical.computeOffset(new google.maps.LatLng(a,b),e/2,180+f),h=google.maps.geometry.spherical.computeOffset(new google.maps.LatLng(a,b),e/2,f);return new google.maps.LatLngBounds(g,h)}function b(a,b,c){var d,e,f,g,h,i=function(){var j=Date.now()-g;b>j?d=setTimeout(i,b-j):(d=null,c||(h=a.apply(f,e),f=e=null))};return function(){f=this,e=arguments,g=Date.now();var j=c&&!d;return d||(d=setTimeout(i,b)),j&&(h=a.apply(f,e),f=e=null),h}}var c=function(a,b,c,d,e){if(google&&google.maps&&a&&b){this.state=JSON.parse(JSON.stringify(this.state));var f=JSON.parse(JSON.stringify(this.config.defaultMapOptions));return f.center=new google.maps.LatLng(f.center.lat,f.center.lng),d&&d instanceof Object&&Object.keys(d).forEach(function(a){f[a]=d[a]}),this.state.map=new google.maps.Map(a,f),this.bindInternalEvents(),this.state.$scope=b,this.state.$compile=c,e&&e.length&&this.addMarkers(e),this}return this.errors.init(a,b,c),null};c.prototype.getMap=function(){return this.state.map},c.prototype.addMarkers=function(a){a?(a instanceof Array||(a=[a]),a.length&&a.forEach(function(a){a.addToMap(this),-1===this.state.markers.indexOf(a)&&this.state.markers.push(a)}.bind(this))):console.error("Invalid Marker object/array passed to GoogleMap.addMarkers")},c.prototype.clearMarkers=function(a,b){this.state.markers&&this.state.markers.length&&(this.state.markers.forEach(function(a){a.remove(),delete a}),this.state.markers=[])},c.prototype.removeMarkers=function(a){a?(a instanceof Array||(a=[a]),a.length&&a.forEach(function(a){this.removeMarker(a)}.bind(this))):console.error("Invalid array of Markers passed to GoogleMap.removeMarkers")},c.prototype.removeMarker=function(a){if(a){for(var b=this.state.markers.length;b>0;b--)if(this.state.markers[b]===a)return a.remove(),delete a,this.state.markers.splice(b,1),!0}else console.error("Invalid Marker object passed to GoogleMap.removeMarker");return!1},c.prototype.getMarkers=function(){return this.state.markers},c.prototype.showMarkers=function(a,b){this.state.markers&&this.state.markers.length&&this.state.markers.forEach(function(a){a.show()})},c.prototype.hideMarkers=function(a,b){this.state.markers&&this.state.markers.length&&this.state.markers.forEach(function(a){a.hide()})},c.prototype.addPolygonOverlay=function(a,b,c,d,e,f,g){if(a&&a.length){var h=[];a.forEach(function(a){h.push(new google.maps.LatLng(a.lat,a.lng))});var i={paths:h,strokeColor:b,strokeOpacity:c,strokeWeight:d,fillColor:e,fillOpacity:f};g&&g instanceof Object&&Object.keys(g).forEach(function(a){i[a]=g[a]});var j=new google.maps.Polygon(i);return j.setMap(this.state.map),this.state.overlays.push(j),j}return console.error("Array of lat/lng objects must be passed to GoogleMap.addPolygonOverlay"),null},c.prototype.addGroundOverlay=function(b,c,d,e,f,g){if(google.maps.geometry&&b&&c&&d&&e&&f){var h=a(c,d,e,f),i={clickable:!0,opacity:g},j=new google.maps.GroundOverlay(b,h,i);return j.setMap(this.state.map),this.state.overlays.push(j),j}return this.errors.groundOverlay(b,c,d,e,f),null},c.prototype.center=function(a,b,c){c=c||!1,a&&b&&this.state.map?c?this.state.map.panTo(new google.maps.LatLng(a,b)):this.state.map.setCenter(new google.maps.LatLng(a,b)):this.errors.center(a,b)},c.prototype.zoom=function(a){this.state.map&&a&&a>=0&&22>=a?this.state.map.setZoom(a):this.errors.zoom(a)},c.prototype.closeInfoboxes=function(){this.state.markers&&this.state.markers.length&&this.state.markers.forEach(function(a){a.closeInfobox()})},c.prototype.fitBounds=function(a){if(a=a||this.state.markers,a&&a.length){var b=a.filter(function(a){return a.isVisible()});if(b.length){this.state.fittingBounds=!0;var c=new google.maps.LatLngBounds;a.forEach(function(a){a.isVisible()&&c.extend(a.state.marker.getPosition())}),this.state.map.fitBounds(c)}}},c.prototype.addEvent=function(a,b){google.maps.event.addListener(this.state.map,a,b)},c.prototype.bindInternalEvents=function(){google.maps.event.addListener(this.state.map,"bounds_changed",function(a){this.fittingBounds=!1}.bind(this)),google.maps.event.addListener(this.state.map,"zoom_changed",b(function(a){this.fittingBounds||this.closeInfoboxes()}.bind(this),150))},c.prototype.compile=function(a,b){if(a&&this.state.$scope&&this.state.$compile){var c=this.state.$compile(a,function(a){b&&(a.mapData=b)});return c(this.state.$scope)}this.errors.compile(a)},c.prototype.hasMarkers=function(){return this.state.markers&&this.state.markers.length?!0:!1},c.prototype.hasClusters=function(){return this.state.clusters&&this.state.clusters.length?!0:!1},c.prototype.hasOverlays=function(){return this.state.overlays&&this.state.overlays.length?!0:!1},c.prototype.isLoaded=function(){return this.state.map?!0:!1},c.prototype.config={defaultMapOptions:{center:{lat:39.5579311,lng:-119.8508414},zoom:8,disableDefaultUI:!1,styles:[]}},c.prototype.state={map:null,markers:[],clusters:[],overlays:[],$scope:null,$compile:null,fittingBounds:!1},c.prototype.errors={init:function(a,b,c){("undefined"==typeof google||"undefined"==typeof google.maps)&&console.error("Google Maps API not loaded.  Example include URL: //maps.googleapis.com/maps/api/js?key=key&sensor=false&libraries=geometry"),a||console.error("Valid HTML element to attach map to must be passed to map constructor"),b||console.error("Valid $scope object must be passed to map constructor"),c||console.error("$compile service must be passed to allow infobox content to be rendered properly")},compile:function(a){this.state.$scope||console.error("Angular $scope must be set to use compile service."),this.state.$compile||console.error("Angular $compile service must be set to use compile service."),a||console.error("Valid content string must be passed to compile service.")},groundOverlay:function(a,b,c,d,e){google.maps.geometry||console.error("Geometry library for Google Maps API not loaded.  Clustering will not be available.  Example include URL: //maps.googleapis.com/maps/api/js?key=key&sensor=false&libraries=geometry"),b&&c||console.error("Valid center lat/lng must be passed to GoogleMap.addGroundOverlay"),d&&e||console.error("Valid width height in meters must be passed to GoogleMap.addGroundOverlay")},center:function(a,b){this.state.map||console.error("Google Map must be active before attempting to center the map"),a&&b||console.error("Valid lat/lng must be passed to center map")},zoom:function(a){this.state.map||console.error("Google Map must be active before attempting to zoom the map"),a||console.error("Valid zoom must be passed to zoom the map"),(0>a||a>21)&&console.error("Passed zoom value falls outside of acceptable zoom range (0 - 21)")}};var d=function(a,b,c,d,e,f,g,h,i){if(google&&google.maps&&a&&b){this.state=JSON.parse(JSON.stringify(this.state));var j=JSON.parse(JSON.stringify(this.config.defaultMarkerOptions));if(j.position=new google.maps.LatLng(a,b),g&&g instanceof Object&&Object.keys(g).forEach(function(a){j[a]=g[a]}),d){var k={url:d,size:e&&f?new google.maps.Size(e,f):new google.maps.Size(32,32),scaledSize:e&&f?new google.maps.Size(e,f):new google.maps.Size(32,32),origin:new google.maps.Point(0,0),anchor:e&&f?new google.maps.Point(e/2,f):new google.maps.Point(16,32)};j.icon=k}return h&&(j.labelContent=h),h?this.state.marker=new MarkerWithLabel(j):this.state.marker=new google.maps.Marker(j),i&&(this.state.data=this.state.marker.data=i),c&&(this.state.map=c,c.addMarkers(this)),this}return this.errors.init(a,b,c,d,e,f,g,i),null};d.prototype.getMarker=function(){return this.state.marker},d.prototype.addInfobox=function(a,b,c,d,e,f,g,h){var i={closeBoxURL:b?b:null,boxClass:c?c:"infobox",pixelOffset:d?new google.maps.Size(d.x,d.y):new google.maps.Size(0,0),alignBottom:!0};if(e&&e instanceof Object&&Object.keys(e).forEach(function(a){i[a]=e[a]}),i.content='<div class="infobox-container"></div>',g)if(jQuery.fn.jScrollPane){var j=i.boxClass+" is-scrollable";a='<div class="'+j+'">'+a+"</div>"}else this.errors.jscrollpane();this.state.infoboxContent=this.state.map.compile(a,this.state.data),this.state.infobox=new InfoBox(i),f&&"hover"!==f?"click"===f&&this.addEvent("click",function(){this.state.map.closeInfoboxes(),this.openInfobox()}.bind(this)):this.addEvent("mouseover",function(){this.state.map.closeInfoboxes(),this.openInfobox()}.bind(this)),google.maps.event.addDomListener(this.state.infobox,"domready",function(){var a=this.state.infobox;if(a.getContent()){var b=a.div_.getElementsByClassName("infobox-container")[0];b.appendChild(this.state.infoboxContent[0]),h&&(a.div_.addEventListener("mouseenter",function(){"number"==typeof a.closeTimer&&clearTimeout(a.closeTimer)}),a.div_.addEventListener("mouseleave",function(){a.closeTimer=setTimeout(function(){a.close()},h)})),g&&jQuery(b).jScrollPane().bind("mouseup.jsp",function(){jQuery("html").unbind("dragstart.jsp selectstart.jsp mousemove.jsp mouseup.jsp mouseleave.jsp"),jQuery(".jspActive").removeClass("jspActive")})}}.bind(this))},d.prototype.addToMap=function(a){this.state.marker.setMap(a.state.map),this.state.map=a,-1===a.state.markers.indexOf(this)&&a.state.markers.push(this)},d.prototype.remove=function(){if(this.state.map&&this.state.map.markers&&this.state.map.markers.length)for(var a=this.state.map.markers.length;a>0;a--)this.state.map.markers[a]===this&&this.state.map.markers.splice(a,1);this.state.marker.setMap(null),this.state.map=null},d.prototype.show=function(){this.state.map&&(this.state.marker.setMap(this.state.map.state.map),this.state.visible=!0)},d.prototype.hide=function(){this.state.marker.setMap(null),this.state.visible=!1},d.prototype.openInfobox=function(){this.state.infobox&&this.state.infobox.open(this.state.map.state.map,this.state.marker)},d.prototype.closeInfobox=function(){this.state.infobox&&this.state.infobox.close()},d.prototype.onHover=function(a,b){var c=null,d=null;this.state.marker.label&&(c=this.state.marker.label.labelDiv_,d=this.state.marker.label.eventDiv_),a&&"function"==typeof a&&this.addEvent("mouseenter",function(b){a.call(this,b,c,d)}.bind(this)),b&&"function"==typeof b&&this.addEvent("mouseleave",function(a){b.call(this,a,c,d)}.bind(this))},d.prototype.onClick=function(a){var b=null,c=null;this.state.marker.label&&(b=this.state.marker.label.labelDiv_,c=this.state.marker.label.eventDiv_),a&&"function"==typeof a&&this.addEvent("click",function(d){a.call(this,d,b,c)}.bind(this))},d.prototype.onInfoboxReady=function(a){a&&"function"==typeof a&&google.maps.event.addDomListener(this.state.infobox,"domready",function(){a()}.bind(this))},d.prototype.addEvent=function(a,b){a&&b&&"function"==typeof b?this.state.marker.label?this.state.marker.label.eventDiv_.addEventListener(a,b):google.maps.event.addListener(this.state.marker,a,b):console.error("Invalid params passed to Marker.addEvent")},d.prototype.setData=function(a){this.state.data=this.state.marker.data=a},d.prototype.hasMap=function(){return this.state.map?!0:!1},d.prototype.isVisible=function(){return this.state.visible},d.prototype.config={defaultMarkerOptions:{draggable:!1,animation:null,position:{lat:39.5579311,lng:-119.8508414},icon:null}},d.prototype.state={map:null,marker:null,data:null,infobox:null,infoboxContent:null,visible:!0},d.prototype.errors={init:function(a,b,c,d,e,f,g,h){("undefined"==typeof google||"undefined"==typeof google.maps)&&console.error("Google Maps API not loaded.  Example include URL: //maps.googleapis.com/maps/api/js?key=key&sensor=false&libraries=geometry"),InfoBox||console.error("InfoBox library not loaded.  Marker infoboxes will not be available.  Get it: bower install google-maps-utility-library-v3 --save"),MarkerWithLabel||console.error("MarkerWithLabel library not loaded.  Markers with labels will not be available.  Get it: bower install google-maps-utility-library-v3 --save"),a&&b||console.error("Valid lat/lng must be passed to create Marker")},jscrollpane:function(){console.error("JScrollPane must be loaded to create scrollable infobox content.  Get it: bower install jquery.jscrollpane --save.  Don't forget to add the CSS!")}};var e=function(a,b,c,d,e,f,g,h){return google.maps.geometry?(this.state=JSON.parse(JSON.stringify(this.state)),this.events=JSON.parse(JSON.stringify(this.events)),this.state.icon=c,this.state.width=d,this.state.height=e,this.state.options=f,this.state.label=g,this.state.data=h,a&&a.length&&(this.state.markers=a),b&&this.setMap(b),this):(this.errors.init(),null)};return e.prototype.getMarkers=function(){return this.state.markers},e.prototype.getActiveMarkers=function(){return this.state.currentMarkers},e.prototype.setMap=function(a){a?(this.state.map=a,a.addEvent("zoom_changed",b(function(a){this.state.markers.length&&this.clusterMarkers()}.bind(this),150)),this.state.markers.length&&this.clusterMarkers()):console.error("Invalid map object passed to Cluster.setMap")},e.prototype.addInfobox=function(a,b,c,d,e,f,g,h){this.state.infobox={content:a,closeIcon:b,boxClass:c,offset:d,options:e,openOn:f,scrollable:g,closeTimeout:h}},e.prototype.onBeforeCreate=function(a){a&&"function"==typeof a&&(this.events.beforeCreate=a)},e.prototype.onRender=function(a){a&&"function"==typeof a&&(this.events.render=a)},e.prototype.onHover=function(a,b){a&&"function"==typeof a&&(this.events.mouseenter=a),b&&"function"==typeof b&&(this.events.mouseleave=b)},e.prototype.onClick=function(a){a&&"function"==typeof a&&(this.events.click=a)},e.prototype.clusterMarkers=function(){if(this.state.map){if(this.clearMarkers(),this.state.markers.length){var a=this.state.markers.filter(function(a){return a.isVisible()});if(a.length){var b=this.group(a);b&&b.length&&(b.forEach(function(a){if(a.markers.length>1){var b={lat:a.centroid.lat,lng:a.centroid.lng,map:this.state.map,icon:this.state.icon,width:this.state.width,height:this.state.height,options:this.state.options,label:this.state.label,data:this.state.data};this.events.beforeCreate&&(overrides=this.events.beforeCreate(a),overrides&&Object.keys(overrides).length&&Object.keys(overrides).forEach(function(a){b[a]=overrides[a]}));var c=new d(b.lat,b.lng,b.map,b.icon,b.width,b.height,b.options,b.label,b.data);(this.events.mouseenter||this.events.mouseleave)&&c.onHover(this.events.mouseenter,this.events.mouseleave),this.events.click&&c.onClick(this.events.click),this.state.infobox&&c.addInfobox(this.state.infobox.content,this.state.infobox.closeIcon,this.state.infobox.boxClass,this.state.infobox.offset,this.state.infobox.options,this.state.infobox.openOn,this.state.infobox.scrollable),c.markerData=a.data,c.markers=a.markers,this.state.currentMarkers.push(c)}else this.state.currentMarkers.push(a.markers[0])}.bind(this)),this.displayClusterMarkers())}}}else console.error("Map must be set before calling Cluster.clusterMarkers")},e.prototype.addMarkers=function(a){a?(a.length?a.forEach(function(a){this.state.markers.push(a)}.bind(this)):this.state.markers.push(a),this.clusterMarkers()):console.error("Invalid Marker object/array passed to GoogleMap.addMarkers")},e.prototype.removeMarkers=function(a){this.state.map&&this.state.markers&&this.state.markers.length&&(a.forEach(function(a){this.removeMarker(a)}.bind(this)),this.clusterMarkers())},e.prototype.removeMarker=function(a){var b=this.state.markers.indexOf(a);b>-1&&this.state.markers.splice(b,1)},e.prototype.clearMarkers=function(){this.state.map&&this.state.currentMarkers&&this.state.currentMarkers.length&&(this.state.currentMarkers.forEach(function(a){a.remove()}),this.state.currentMarkers=[])},e.prototype.resetCluster=function(){this.clearMarkers(),this.state.markers=[]},e.prototype.displayClusterMarkers=function(){this.state.map&&this.state.currentMarkers&&this.state.currentMarkers.length&&(this.state.map.addMarkers(this.state.currentMarkers),this.events.render&&this.events.render(this.state.currentMarkers))},e.prototype.group=function(a,b){var a=a||this.state.markers,b=b||this.getGroupingDistance();if(a&&a.length&&b){var c=[],d=a.slice(),c=this.findMarkerGroups(b,d,c);if(c.length){var e=[];return c.forEach(function(a){var b={markers:a,data:[]};a.length&&(b.centroid={lat:0,lng:0},a.forEach(function(a){b.centroid.lat+=a.state.marker.getPosition().lat(),b.centroid.lng+=a.state.marker.getPosition().lng(),a.state.data&&b.data.push(a.state.data)}),b.centroid.lat/=a.length,b.centroid.lng/=a.length),e.push(b)}),e}return null}this.errors.group(a,b)},e.prototype.findMarkerGroups=function(a,b,c){var d=this.findMarkerNeighbors(b.pop(),a,b);return c.push(d),b.length>1?this.findMarkerGroups(a,b,c):1==b.length&&c.push([b.pop()]),c},e.prototype.findMarkerNeighbors=function(a,b,c){var d=[];d.push(a);for(var e=c.length;e--;e>0){var f=google.maps.geometry.spherical.computeDistanceBetween(a.state.marker.getPosition(),c[e].state.marker.getPosition());b>=f&&d.push(c.splice(e,1)[0])}return d},e.prototype.getGroupingDistance=function(a){var b=a||this.state.map.state.map.getZoom(),c=this.config.clusterMapping,d=c[b]?c[b]:c["default"];return d?d:0},e.prototype.setClusterZoomMapping=function(a){a&&Object.keys(a).length?Object.keys(a).forEach(function(b){this.config.clusterMapping[b]=a[b]}.bind(this)):console.error("Valid zoom mapping object must be passed to Cluster.setClusterZoomMapping")},e.prototype.config={clusterMapping:{8:6e3,9:4500,10:3e3,11:2500,12:1500,13:1500,14:1e3,15:800,"default":1e4}},e.prototype.state={map:null,markers:[],currentMarkers:[],icon:null,width:null,height:null,options:null,label:null,data:null,infobox:null},e.prototype.events={beforeCreate:null,render:null,mouseenter:null,mouseleave:null,click:null},e.prototype.errors={init:function(){google.maps.geometry||console.error("Geometry library for Google Maps API not loaded.  Clustering will not be available.  Example include URL: //maps.googleapis.com/maps/api/js?key=key&sensor=false&libraries=geometry")},group:function(a,b){a&&a.length||console.error("Empty marker list passed to Cluster.group"),b||console.error("Invalid distance passed to Cluster.group")}},{$get:function(){return{GoogleMap:c,Marker:d,Cluster:e}}}}]);